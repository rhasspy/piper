name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build_linux:
    name: "Build on Linux (multi-arch)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Build multi-arch
        run: |
          docker buildx build . \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=local,dest=dist"

      - name: Upload Linux amd64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-amd64
          path: dist/linux_amd64/piper_amd64.tar.gz

      - name: Upload Linux aarch64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-aarch64
          path: dist/linux_arm64/piper_arm64.tar.gz

      - name: Upload Linux armv7 artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-armv7
          path: dist/linux_arm_v7/piper_armv7.tar.gz

  build_windows:
    name: "Build on Windows"
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        arch: [amd64]
    steps:
      - uses: actions/checkout@v4

      - name: Configure
        run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX=_install/piper

      - name: Build
        run: cmake --build build --config Release

      - name: Install
        run: cmake --install build

      - name: Package
        run: |
          cd _install
          Compress-Archive -LiteralPath piper -DestinationPath piper_windows_amd64.zip

      - name: Upload Windows amd64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-amd64
          path: _install/piper_windows_amd64.zip

  build_macos:
    name: "Build on macOS"
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        arch: [x86_x64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Configure
        run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX=_install/piper

      - name: Build
        run: cmake --build build --config Release

      - name: Install
        run: cmake --install build

      - name: Package
        run: |
          cd _install
          tar -czf piper_macos_${{ matrix.arch }}.tar.gz piper/

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          # We'll name the artifact so we can handle x64 vs. aarch64 distinctly
          name: macos-${{ matrix.arch }}
          path: _install/piper_macos_${{ matrix.arch }}.tar.gz

  create_release_and_upload:
    name: "Create/Update Release & Upload"
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows, build_macos]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        uses: actions/setup-gh-cli@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release_assets

      - name: Create or update release
        shell: bash
        run: |
          # Extract the tag name from the push ref
          TAG="${GITHUB_REF#refs/tags/}"
          echo "Creating (or updating) release for tag: $TAG"

          # Attempt to create a release. If it already exists, this will exit non-zero.
          # We can ignore with '|| true' or handle logic as needed.
          gh release create "$TAG" \
            --title "$TAG" \
            --notes "Automated piper release for $TAG" \
            || echo "Release for $TAG already exists. Proceeding to upload assets."

      - name: Upload Linux amd64
        if: always()
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          gh release upload "$TAG" \
            "./release_assets/linux-amd64/piper_amd64.tar.gz" \
            --label "piper_linux_amd64.tar.gz" \
            --clobber

      - name: Upload Linux aarch64
        if: always()
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          gh release upload "$TAG" \
            "./release_assets/linux-aarch64/piper_arm64.tar.gz" \
            --label "piper_linux_aarch64.tar.gz" \
            --clobber

      - name: Upload Linux armv7
        if: always()
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          gh release upload "$TAG" \
            "./release_assets/linux-armv7/piper_armv7.tar.gz" \
            --label "piper_linux_armv7l.tar.gz" \
            --clobber

      - name: Upload Windows amd64
        if: always()
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          gh release upload "$TAG" \
            "./release_assets/windows-amd64/piper_windows_amd64.zip" \
            --label "piper_windows_amd64.zip" \
            --clobber

      - name: Upload macOS amd64
        if: always()
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          # The x64 artifact is under release_assets/macos-x64
          gh release upload "$TAG" \
            "./release_assets/macos-x64/piper_macos_x64.tar.gz" \
            --label "piper_macos_x64.tar.gz" \
            --clobber

      - name: Upload macOS aarch64
        if: always()
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          # The aarch64 artifact is under release_assets/macos-aarch64
          gh release upload "$TAG" \
            "./release_assets/macos-aarch64/piper_macos_aarch64.tar.gz" \
            --label "piper_macos_aarch64.tar.gz" \
            --clobber
